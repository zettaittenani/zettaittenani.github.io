<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on 絶対ってなに</title>
    <link>https://zettaittenani.github.io/tags/tech/</link>
    <description>絶対ってなに (tech)</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Jul 2022 13:16:56 +0900</lastBuildDate>
    
    <atom:link href="https://zettaittenani.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python implementation check list</title>
      <link>https://zettaittenani.github.io/posts/2022/07/15/python-implementation-check-list/</link>
      <pubDate>Fri, 15 Jul 2022 13:16:56 +0900</pubDate>
      
      <guid>https://zettaittenani.github.io/posts/2022/07/15/python-implementation-check-list/</guid>
      <description>&lt;h2 id=&#34;to-check-list&#34;&gt;To-Check list&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The mechanism of list.
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zettaittenani.github.io/posts/2022/07/14/time-complexity-of-serveral-operations-for-list-in-python/&#34;&gt;Time complexity of serveral operations for list in Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; The implementation when a list object is redefined as set.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Time complexity of serveral operations for list in Python</title>
      <link>https://zettaittenani.github.io/posts/2022/07/14/time-complexity-of-serveral-operations-for-list-in-python/</link>
      <pubDate>Thu, 14 Jul 2022 08:34:11 +0900</pubDate>
      
      <guid>https://zettaittenani.github.io/posts/2022/07/14/time-complexity-of-serveral-operations-for-list-in-python/</guid>
      <description>&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;All of the Objects used in Python are defined as PyObject extension.&lt;/li&gt;
&lt;li&gt;We can treat List in Python basically the same as C lang&amp;rsquo;s.
&lt;ul&gt;
&lt;li&gt;Access to an element in a List in Python takes O(1) time complexity, which is the same as C lang&amp;rsquo;s random access to an array.&lt;/li&gt;
&lt;li&gt;Access to elements in a List using slice in Python takes O(k) time complexity (k means the slice&amp;rsquo;s length) because it is implemented as new memory allocation and copy elements using for loop.&lt;/li&gt;
&lt;li&gt;list.pop(x) takes O(n) time complexity (len(list) is n) because the elements that have bigger indices than x have to be moved to the previous array.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.madopro.net/entry/2016/06/29/173841&#34;&gt;Pythonのlist型の実装を読んでみる - 今日も窓辺でプログラム&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>